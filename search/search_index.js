var __index = Promise.resolve({"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+","tags":false},"docs":[{"location":"","text":"<p>Use Case Portal</p>","title":"Introduction"},{"location":"glos/","text":"<ul> <li>EKG</li> <li>EKG/Platform</li> <li>Primary Repository</li> <li>Use Case</li> <li>SPARQL</li> <li>Story</li> <li>Triplestore</li> </ul>","title":"Index"},{"location":"glos/api-gateway/","text":"","title":"API Gateway"},{"location":"glos/api/","text":"<p>The RedHat definition:</p>  <p>API stands for application programming interface, which is a set of definitions and protocols for building and integrating application software.</p>","title":"API"},{"location":"glos/ekg-id/","text":"<p>An EKG/ID is an Enterprise Knowledge Graph Identifier that has the form of a number.</p> <p>At higher levels of maturity for your overall EKG Platform Architecture you may wish to switch over from using EKG/IRIs for all your EKG identifiers to EKG/IDs in order to decouple the primary identifiers for any given \"thing\" in your Enterprise Knowledge Graph from their DNS host or domain name as that is encoded in each HTTP URL today.</p> <p>In other words, in the various backend data-stores of your EKG you then no longer use HTTP URLs as the identifier for any given thing but numbers (either large random numbers or large hash numbers, signed or not signed).</p>","title":"EKG/ID"},{"location":"glos/ekg-iri/","text":"<p>An EKG/IRI is an Enterprise Knowledge Graph Identifier that has the form of a URL/URI1</p>   <ol> <li> <p>We prefer to use the term IRI because a) that's the most recent name of the URI standard and b) IRIs support international encodings so that terms in non-latin languages like Chinese and Arab can also be supported.\u00a0\u21a9</p> </li> </ol>","title":"EKG/IRI"},{"location":"glos/ekg-platform/","text":"<p>An Enterprise Knowledge Graph Platform is a logical system architecture component, the layer of software services that provide and  serve the EKG to end-users and other systems. The platform logically is a set services that enforce any of the specified policies in the self-describing datasets (SDDs) that have been  published in the EKG.</p>","title":"EKG/Platform"},{"location":"glos/ekg/","text":"<p>much like \"the web\" is a virtual concept, an Enterprise Knowledge Graph (EKG) is a virtual concept  that stands for the combination of all information and knowledge of a given enterprise -- at any level in the organization -- or ecosystem.</p>","title":"EKG"},{"location":"glos/primary-repo/","text":"<p>The primary EKG repository is the git repository that holds all metadata that described an organization's Enterprise Knowledge Graph in terms of:</p> <ul> <li> <p>All Use Cases and their:</p> <ul> <li>Stories</li> <li>Concepts, Vocabularies &amp; Ontologies</li> <li>Personas</li> <li>Business Purposes &amp; Outcomes</li> <li>Test Scenarios</li> <li>(Descriptions of) Datasets</li> </ul> </li> <li> <p>Infrastructure of the EKG/Platform:</p> <ul> <li>Helm Charts</li> <li>Terraform   Terraform files that provision a Kubernetes cluster</li> <li>Software Components   Metadata for all the various software components e.g. services,   docker images, docker volumes etc.</li> </ul> </li> </ul>","title":"Primary EKG Repository"},{"location":"glos/sparql/","text":"<p>SPARQL (pronounced \"sparkle\" /\u02c8sp\u0251\u02d0k\u0259l/, a recursive acronym for SPARQL Protocol and RDF Query Language) is an RDF query language\u2014that is, a semantic query language for databases\u2014able to retrieve and manipulate data stored in Resource Description Framework (RDF) format.</p> <pre><code>PREFIX lcc-cr: &lt;https://www.omg.org/spec/LCC/Countries/CountryRepresentation/&gt;\n\nSELECT DISTINCT\n    ?graph\n    ?region\n    ?regionLabel\nWHERE {\n    GRAPH ?graph {\n        ?region a lcc-cr:Country .\n        ?region ?p ?regionObject .\n        ?region rdfs:label ?regionLabel .\n\n        BIND(COALESCE(?searchText, \"\") AS ?searchTextBound)\n\n        FILTER (\n            CONTAINS(LCASE(?regionObject), LCASE(?searchTextBound))\n        )\n    }\n}\nORDER BY ?regionLabel\n</code></pre>","title":"SPARQL"},{"location":"glos/story/","text":"","title":"Story"},{"location":"glos/triple/","text":"","title":"Triple"},{"location":"glos/triplestore/","text":"<p>The term \"triplestore\" is the colloquial term for a database whose internal data structure is based on \"RDF Statements\" a.k.a. \"triples\", see triple for more information.</p>","title":"Triplestore"},{"location":"glos/use-case/","text":"","title":"Use Case"},{"location":"use-case/","text":"<p>Any imaginable use case can be implemented using the Datapoint Protocol. There are no limits.</p> <p>However, certain types of use cases would benefit extraordinarily from having a DPP-foundation:</p>  <ul> <li>Digital Twin / Connected Inventory</li> <li>Client 360</li> <li>Real-time Fraud Detection</li> <li>Real-time Enterprise Risk Management</li> <li>Cybersecurity</li> <li>Organization Management</li> </ul>","title":"Use Cases"},{"location":"use-case/strategic-use-cases/","text":"<ul> <li>Digital Twin / Connected Inventory</li> <li>Client 360</li> <li>Real-time Fraud Detection</li> <li>Real-time Enterprise Risk Management</li> <li>Cybersecurity</li> <li>Organization Management</li> </ul>","title":"Strategic use cases"},{"location":"use-case/client-360/","text":"","title":"Client 360"},{"location":"use-case/cyber-security/","text":"","title":"Cybersecurity"},{"location":"use-case/digital-twin/","text":"<p>Digital Twin / Connected Inventory</p>","title":"Digital Twin"},{"location":"use-case/fraud-detection/","text":"","title":"Real-time Fraud Detection"},{"location":"use-case/organization-management/","text":"","title":"Organization Management"},{"location":"use-case/risk-management/","text":"","title":"Real-time Enterprise Risk Management"}]})